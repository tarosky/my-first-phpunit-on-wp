name: Tests and Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-version: ['8.2', '8.3']
        node-version: ['18']

    name: PHP ${{ matrix.php-version }} - Node ${{ matrix.node-version }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Setup PHP ${{ matrix.php-version }}
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, mysql, mysqli, pdo_mysql
        coverage: xdebug

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Install npm dependencies
      run: npm ci

    - name: Start WordPress environment with Xdebug
      run: npm run start:xdebug

    - name: Wait for WordPress to be ready
      run: sleep 30

    - name: Run tests
      run: npm test

    - name: Run tests with coverage
      run: npm run coverage:xml

    - name: Upload coverage reports to Codecov
      if: matrix.php-version == '8.2' && matrix.node-version == '18'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/clover.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload coverage artifacts
      if: matrix.php-version == '8.2' && matrix.node-version == '18'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: |
          coverage/
        retention-days: 30

  lint:
    runs-on: ubuntu-latest
    name: Code Quality

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP 8.2
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2
        tools: composer

    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Check PHP syntax
      run: |
        echo "Checking PHP syntax for all PHP files..."
        find . -name "*.php" -not -path "./vendor/*" -not -path "./wordpress/*" -print0 | xargs -0 -n1 php -l
        if [ $? -eq 0 ]; then
          echo "✅ All PHP files have valid syntax"
        else
          echo "❌ PHP syntax errors found"
          exit 1
        fi

    - name: Run PHPCS lint checks
      run: composer lint

    - name: Validate composer.json
      run: composer validate --strict
